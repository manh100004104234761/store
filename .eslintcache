[{"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\index.tsx":"1","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\navigation\\Root.tsx":"2","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\reducer\\index.ts":"3","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\navigation\\RouteLayout.tsx":"4","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\App.tsx":"5","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\middleware\\api.ts":"6","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\reducer\\user.reducer.ts":"7","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\index.ts":"8","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\web\\index.ts":"9","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\selector\\user.selectors.ts":"10","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\action\\user.action.ts":"11","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\lib\\storage.ts":"12","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\action\\dispatchApi.ts":"13","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\web\\ItemDetail\\ItemDetail.tsx":"14","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\Title\\Title.tsx":"15","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\web\\Checkout\\components\\AddressForm\\AddressForm.tsx":"16","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\CardItem\\components\\AddToFavorite\\AddToFavorite.tsx":"17","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\CardItem\\components\\AddToCompare\\AddToCompare.tsx":"18","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\web\\Home\\Home.tsx":"19","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\action\\error.action.ts":"20","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\shared\\ultis\\color.ts":"21","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\Account\\components\\index.tsx":"22","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\layout\\MainLayout\\NavBar\\NavItem.tsx":"23","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\layout\\MainLayout\\TopBar\\TopBar.tsx":"24","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\web\\Checkout\\Checkout.tsx":"25","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\action\\loading.action.ts":"26","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\SignIn\\SignIn.tsx":"27","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\SignUp\\SignUp.tsx":"28","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\reducer\\loading.reducer.ts":"29","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\layout\\index.ts":"30","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\web\\Checkout\\components\\OrderForm\\OrderForm.tsx":"31","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\layout\\MainLayout\\MainLayout.tsx":"32","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\CardItem\\components\\AddToCart\\AddToCart.tsx":"33","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\Account\\components\\Profile\\Profile.tsx":"34","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\reducer\\error.reducer.ts":"35","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\web\\Cart\\Cart.tsx":"36","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\CardItem\\components\\Detail\\Detail.tsx":"37","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\web\\Checkout\\components\\AddressForm\\addressFields.ts":"38","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\reportWebVitals.ts":"39","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\SignUp\\SignUpForm.ts":"40","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\shared\\ultis\\intl.utils.ts":"41","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\layout\\MainLayout\\NavBar\\NavBar.tsx":"42","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\Account\\Account.tsx":"43","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\CardItem\\CardItem.tsx":"44","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\ImageViewer\\ImageViewer.tsx":"45","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\store\\store.ts":"46","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\action\\new.action.ts":"47","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\reducer\\new.reducer.ts":"48","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\web\\New\\New.tsx":"49","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\reducer\\product.reducer.ts":"50","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\action\\product.action.ts":"51","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\action\\success.action.ts":"52","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\Account\\components\\Security\\Security.tsx":"53","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\web\\Search\\Search.tsx":"54","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\web\\WishList\\WishList.tsx":"55","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\web\\Compare\\Compare.tsx":"56","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\web\\Category\\Category.tsx":"57"},{"size":1106,"mtime":1608991003235,"results":"58","hashOfConfig":"59"},{"size":2039,"mtime":1609733531570,"results":"60","hashOfConfig":"59"},{"size":461,"mtime":1608991003251,"results":"61","hashOfConfig":"59"},{"size":1523,"mtime":1609399756379,"results":"62","hashOfConfig":"59"},{"size":986,"mtime":1609346232865,"results":"63","hashOfConfig":"59"},{"size":1977,"mtime":1609506299433,"results":"64","hashOfConfig":"59"},{"size":3793,"mtime":1609728405126,"results":"65","hashOfConfig":"59"},{"size":276,"mtime":1608991003213,"results":"66","hashOfConfig":"59"},{"size":389,"mtime":1609733607506,"results":"67","hashOfConfig":"59"},{"size":539,"mtime":1608991003258,"results":"68","hashOfConfig":"59"},{"size":8231,"mtime":1609733371900,"results":"69","hashOfConfig":"59"},{"size":1875,"mtime":1608991003237,"results":"70","hashOfConfig":"59"},{"size":605,"mtime":1608991003241,"results":"71","hashOfConfig":"59"},{"size":4096,"mtime":1609732478864,"results":"72","hashOfConfig":"59"},{"size":686,"mtime":1608991003212,"results":"73","hashOfConfig":"59"},{"size":2217,"mtime":1609727358793,"results":"74","hashOfConfig":"59"},{"size":1758,"mtime":1609733182031,"results":"75","hashOfConfig":"59"},{"size":1558,"mtime":1609525083440,"results":"76","hashOfConfig":"59"},{"size":2220,"mtime":1608991003229,"results":"77","hashOfConfig":"59"},{"size":293,"mtime":1608991003242,"results":"78","hashOfConfig":"59"},{"size":79,"mtime":1608991003262,"results":"79","hashOfConfig":"59"},{"size":117,"mtime":1609135549371,"results":"80","hashOfConfig":"59"},{"size":2625,"mtime":1609403259690,"results":"81","hashOfConfig":"59"},{"size":9356,"mtime":1609524689847,"results":"82","hashOfConfig":"59"},{"size":5731,"mtime":1609731366864,"results":"83","hashOfConfig":"59"},{"size":373,"mtime":1608991003243,"results":"84","hashOfConfig":"59"},{"size":5125,"mtime":1608991003208,"results":"85","hashOfConfig":"59"},{"size":4905,"mtime":1609139051712,"results":"86","hashOfConfig":"59"},{"size":528,"mtime":1608991003252,"results":"87","hashOfConfig":"59"},{"size":66,"mtime":1608991003219,"results":"88","hashOfConfig":"59"},{"size":2184,"mtime":1609730410888,"results":"89","hashOfConfig":"59"},{"size":1082,"mtime":1608991003214,"results":"90","hashOfConfig":"59"},{"size":1944,"mtime":1609733060224,"results":"91","hashOfConfig":"59"},{"size":4446,"mtime":1609143231771,"results":"92","hashOfConfig":"59"},{"size":583,"mtime":1608991003251,"results":"93","hashOfConfig":"59"},{"size":6563,"mtime":1609732992676,"results":"94","hashOfConfig":"59"},{"size":1284,"mtime":1609344462611,"results":"95","hashOfConfig":"59"},{"size":537,"mtime":1609727392386,"results":"96","hashOfConfig":"59"},{"size":440,"mtime":1608991003257,"results":"97","hashOfConfig":"59"},{"size":1552,"mtime":1609409811336,"results":"98","hashOfConfig":"59"},{"size":421,"mtime":1609132322826,"results":"99","hashOfConfig":"59"},{"size":2241,"mtime":1609403418407,"results":"100","hashOfConfig":"59"},{"size":1406,"mtime":1609135631332,"results":"101","hashOfConfig":"59"},{"size":1988,"mtime":1609524334757,"results":"102","hashOfConfig":"59"},{"size":1567,"mtime":1608991003207,"results":"103","hashOfConfig":"59"},{"size":426,"mtime":1608991003257,"results":"104","hashOfConfig":"59"},{"size":543,"mtime":1608991003245,"results":"105","hashOfConfig":"59"},{"size":553,"mtime":1608991003253,"results":"106","hashOfConfig":"59"},{"size":1027,"mtime":1609151499372,"results":"107","hashOfConfig":"59"},{"size":2240,"mtime":1609525105108,"results":"108","hashOfConfig":"59"},{"size":3935,"mtime":1609734201364,"results":"109","hashOfConfig":"59"},{"size":183,"mtime":1609131922298,"results":"110","hashOfConfig":"59"},{"size":3217,"mtime":1609141630403,"results":"111","hashOfConfig":"59"},{"size":2049,"mtime":1609215692099,"results":"112","hashOfConfig":"59"},{"size":4224,"mtime":1609526282304,"results":"113","hashOfConfig":"59"},{"size":3915,"mtime":1609732292271,"results":"114","hashOfConfig":"59"},{"size":1909,"mtime":1609734254134,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"11actqr",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"126"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"126"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"126"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"174"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"201"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"118"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"126"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"118"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"126"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256"},"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\index.tsx",[],["257","258"],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\navigation\\Root.tsx",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\reducer\\index.ts",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\navigation\\RouteLayout.tsx",["259","260"],"import { Typography } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect, Route, useHistory } from \"react-router-dom\";\r\nimport { MainLayout } from \"src/components/layout\";\r\nimport { IUserState } from \"src/redux/reducer/user.reducer\";\r\nimport { StoreState } from \"src/redux/store/store\";\r\nimport { isAuthenticated } from \"src/selector/user.selectors\";\r\n\r\ninterface Props {\r\n  component: any;\r\n  path: string;\r\n  exact?: boolean;\r\n}\r\n\r\nexport const PrivateRoute: React.FC<Props> = (props: Props) => {\r\n  const { component: Component, ...rest } = props;\r\n  const history = useHistory();\r\n\r\n  const user = useSelector<StoreState, IUserState>((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (!user.isLoggedIn) {\r\n      history.push(\"/auth/sign-in\");\r\n    }\r\n  }, [user.isLoggedIn]);\r\n\r\n  // true replace by isAuthenticated()\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(matchProps) =>\r\n        isAuthenticated() ? (\r\n          <MainLayout>\r\n            <Component {...matchProps} />\r\n          </MainLayout>\r\n        ) : (\r\n          <Redirect to={{ pathname: \"/auth/sign-in\" }} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const FreeRoute: React.FC<Props> = (props: Props) => {\r\n  const { component: Component, ...rest } = props;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(matchProps) => (\r\n        <MainLayout>\r\n          <Component {...matchProps} />\r\n        </MainLayout>\r\n      )}\r\n    />\r\n  );\r\n};\r\n",["261","262"],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\App.tsx",["263","264"],"import React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getCartDetail,\r\n  getUserInfo,\r\n  getWishList,\r\n  persistToken,\r\n} from \"./redux/action/user.action\";\r\nimport { IUserState } from \"./redux/reducer/user.reducer\";\r\nimport { StoreState } from \"./redux/store/store\";\r\n\r\ninterface Props {\r\n  children: React.ReactNode;\r\n}\r\n\r\nfunction App(props: Props) {\r\n  const { children } = props;\r\n  // React Hook Function\r\n  const dispatch = useDispatch();\r\n  const user = useSelector<StoreState, IUserState>((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (!user.loadedInfo) {\r\n      dispatch(persistToken());\r\n    }\r\n  }, [user.loadedInfo]);\r\n\r\n  useEffect(() => {\r\n    if (user.isLoggedIn) {\r\n      dispatch(getUserInfo());\r\n      dispatch(getCartDetail());\r\n      dispatch(getWishList());\r\n    }\r\n  }, [user.isLoggedIn]);\r\n\r\n  return <div className=\"App-wrapper\">{children}</div>;\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\middleware\\api.ts",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\reducer\\user.reducer.ts",["265"],"import jwtDecode from 'jwt-decode';\r\nimport { ICartItem, IGetCartDetailRes } from 'src/shared/type/cart.type';\r\nimport { IGetWishlistDetailRes, IWishlistItem } from 'src/shared/type/wishlist.type';\r\nimport { BOOK_TOKEN_KEY, localStore } from '../../lib/storage';\r\nimport { ITokenDecode, GetUserInfoRes, IUser } from '../../shared/type/user.type';\r\nimport * as userAction from '../action/user.action';\r\n\r\nexport interface IUserState {\r\n  authToken: string;\r\n  isLoggedIn: boolean;\r\n  user?: IUser;\r\n  loadedInfo: boolean;\r\n  cart: ICartItem[];\r\n  cartId: string;\r\n  cartTotal: string;\r\n  wishList: IWishlistItem[];\r\n}\r\n\r\nconst initialState: IUserState = {\r\n  authToken: '',\r\n  isLoggedIn: false,\r\n  loadedInfo: false,\r\n  cart: [],\r\n  cartId: '',\r\n  cartTotal: '',\r\n  wishList: [],\r\n};\r\n\r\nexport default function userReducer(\r\n  state: IUserState = initialState,\r\n  action: any\r\n): IUserState {\r\n  switch (action.type) {\r\n    case userAction.REGISTER_KEYS.REGISTER_SUCCESS: {\r\n      return {\r\n        ...state\r\n      }\r\n    }\r\n    case userAction.LOGIN_KEYS.LOGIN_SUCCESS: {\r\n      const isLoggedIn = !!(action.payload && action.payload.data);\r\n      if (isLoggedIn) {\r\n        const { data } = action.payload;\r\n        const { jwt } = data;\r\n        localStore.setItem(BOOK_TOKEN_KEY, jwt);\r\n        //Tra ve state (tat ca), ben duoi la ghi de len\r\n        return {\r\n          ...state,\r\n          isLoggedIn,\r\n          authToken: jwt,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        isLoggedIn,\r\n      };\r\n    }\r\n    case userAction.PERSIST_TOKEN_TO_STORE_KEYS\r\n    .PERSIST_TOKEN_TO_STORE_SUCCESS: {\r\n      const token = localStore.getItem(BOOK_TOKEN_KEY);\r\n      if (token) {\r\n        const infoToken = jwtDecode(token) as ITokenDecode;\r\n        const isLoggedIn = infoToken.exp > Date.now() / 1000;\r\n        return { ...state, isLoggedIn, authToken: token, loadedInfo: true };\r\n      }\r\n      return state;\r\n    }\r\n    case userAction.GET_USER_INFO_KEYS.GET_USER_INFO_SUCCESS: {\r\n      const { data } = action.payload as GetUserInfoRes;\r\n      const user = data;\r\n      return {\r\n        ...state,\r\n        user,\r\n      };\r\n    }\r\n    case userAction.UPDATE_USER_INFO_KEYS.UPDATE_USER_INFO_SUCCESS: {\r\n      const isLoggedIn = !!(action.payload && action.payload.data);\r\n      if (isLoggedIn) {\r\n        const { data } = action.payload;\r\n        const { jwt } = data;\r\n        localStore.removeItem(BOOK_TOKEN_KEY);\r\n        localStore.setItem(BOOK_TOKEN_KEY, jwt);\r\n        //Tra ve state (tat ca), ben duoi la ghi de len\r\n        return {\r\n          ...state,\r\n          isLoggedIn,\r\n          authToken: jwt,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        isLoggedIn,\r\n      };\r\n    }\r\n    case userAction.LOGOUT_KEYS.LOGOUT_SUCCESS: {\r\n      localStore.removeItem(BOOK_TOKEN_KEY);\r\n      return initialState;\r\n    }\r\n    case userAction.GET_CART_DETAIL_KEYS.GET_CART_DETAIL_SUCCESS: {\r\n      const { data } = action.payload as IGetCartDetailRes;\r\n      const { items } = data;\r\n      return {\r\n        ...state,\r\n        cart: items,\r\n        cartId: data.cart_id,\r\n        cartTotal: data.total\r\n      }\r\n    }\r\n    case userAction.ADD_TO_CART_KEYS.ADD_TO_CART_SUCCESS: {\r\n      return {\r\n        ...state\r\n      }\r\n    }\r\n    case userAction.GET_WISHLIST_KEYS.GET_WISHLIST_SUCCESS: {\r\n      const { data } = action.payload as IGetWishlistDetailRes;\r\n      return{\r\n        ...state,\r\n        wishList: data,\r\n      }\r\n    }\r\n    case userAction.GET_WISHLIST_KEYS.GET_WISHLIST_SUCCESS: {\r\n     return {\r\n       ...state\r\n     }\r\n    }\r\n    case userAction.CHECKOUT_KEYS.CHECKOUT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        cart: [],\r\n        cartId: \"\",\r\n        cartTotal: \"\",\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\index.ts",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\web\\index.ts",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\selector\\user.selectors.ts",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\action\\user.action.ts",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\lib\\storage.ts",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\action\\dispatchApi.ts",["266"],"import { CALL_API } from \"../middleware/api\";\r\nimport { Action } from \"redux\";\r\nimport { Method, AxiosRequestConfig } from \"axios\";\r\n\r\ninterface ICallApiInfo {\r\n  types: string[];\r\n  endpoint: string;\r\n  method: Method;\r\n  body: AxiosRequestConfig;\r\n  stop?: boolean;\r\n}\r\n\r\nexport interface IApiAction extends Action {\r\n  [CALL_API]: ICallApiInfo;\r\n}\r\n\r\nexport default <T>(\r\n  dispatch: any,\r\n  { types, endpoint, method, body, stop }: ICallApiInfo\r\n) =>\r\n  dispatch({\r\n    type: \"\",\r\n    [CALL_API]: {\r\n      types,\r\n      endpoint,\r\n      method,\r\n      body,\r\n      stop,\r\n    },\r\n  }) as Promise<T>;\r\n",["267","268"],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\web\\ItemDetail\\ItemDetail.tsx",["269","270","271","272","273"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { TextField, Typography } from \"@material-ui/core\";\r\nimport CardItem from \"../../common/CardItem/CardItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Title from \"../../common/Title/Title\";\r\nimport {\r\n  IProductDetail,\r\n  IProductIDReq,\r\n  IProductDetailRes,\r\n} from \"src/shared/type/product.type\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getProductDetail } from \"src/redux/action/product.action\";\r\nimport { comment } from \"src/redux/action/user.action\";\r\nimport { DriveEtaTwoTone } from \"@material-ui/icons\";\r\n\r\ninterface Props {\r\n  match: any;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    header: {\r\n      marginLeft: 40,\r\n    },\r\n  })\r\n);\r\n\r\nexport default function ItemDetail(props: Props) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [product, setproduct] = useState<IProductDetail>({} as IProductDetail);\r\n\r\n  const [binhluan, setBinhluan] = useState<string>(\"\");\r\n  const handleChange = (event: any) => {\r\n    setBinhluan(event.target.value);\r\n  };\r\n\r\n  const handleComment = async (event: any) => {\r\n    let commentReq = {\r\n      product_id: product.product_id,\r\n      content: binhluan,\r\n    };\r\n    const result = (await dispatch(comment(commentReq))) as any;\r\n    if (result.status) {\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  const productId = props.match.params.productId;\r\n  let productDetailReq: IProductIDReq = {\r\n    product_id: productId,\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const result = ((await dispatch(\r\n          getProductDetail(productDetailReq)\r\n        )) as any) as IProductDetailRes;\r\n        if (result.status) {\r\n          setproduct(result.data);\r\n        }\r\n      } catch (err) {}\r\n    })();\r\n  }, []);\r\n\r\n  if (Object.values(product).length === 0) {\r\n    console.log(\"Ec\");\r\n    return <div />;\r\n  }\r\n  return (\r\n    <>\r\n      <div style={{ display: \"flex\" }}>\r\n        <Title title=\"Chi tiết sản phẩm\" subTitle=\"Chi tiết sản phẩm\" />\r\n        <div style={{ marginLeft: 220 }}>\r\n          <Title title=\"Thông số\" />\r\n        </div>\r\n      </div>\r\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <div style={{ marginRight: 50 }}>\r\n          <CardItem\r\n            item={{\r\n              image: product.image,\r\n              product_name: product.product_name,\r\n              description: product.description,\r\n              price: product.price,\r\n              product_id: product.product_id,\r\n            }}\r\n          />\r\n        </div>\r\n        <div style={{ marginRight: 50 }}>\r\n          <div style={{ marginBottom: 150 }}>\r\n            {product.values &&\r\n              product.values.map(\r\n                (value) => (\r\n                  <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                    <h3>{value.name}:</h3>\r\n                    <h2>{value.value}</h2>\r\n                  </div>\r\n                )\r\n                // {\r\n                //   !Array.isArray(value) ? console.log(key) : console.log(value);\r\n                // }\r\n              )}\r\n          </div>\r\n          <div>\r\n            <div>Bình luận</div>\r\n            {product.review?.map((ireview) => (\r\n              <div>\r\n                <h3>{ireview.username}</h3>\r\n                <h2>{ireview.content}</h2>\r\n              </div>\r\n            ))}\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                variant=\"outlined\"\r\n                label=\"Binh luan\"\r\n                onChange={handleChange}\r\n              />\r\n              <div style={{ marginLeft: 10 }}>\r\n                <Button variant=\"contained\" onClick={handleComment}>\r\n                  Bình luận\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\Title\\Title.tsx",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\web\\Checkout\\components\\AddressForm\\AddressForm.tsx",["274","275","276","277"],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\CardItem\\components\\AddToFavorite\\AddToFavorite.tsx",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\CardItem\\components\\AddToCompare\\AddToCompare.tsx",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\web\\Home\\Home.tsx",["278","279"],"import React, { useEffect } from \"react\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardItem from \"../../common/CardItem/CardItem\";\r\nimport { IProductState } from \"src/redux/reducer/product.reducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { StoreState } from \"src/redux/store/store\";\r\nimport {\r\n  getProductCount,\r\n  getProductPerPage,\r\n} from \"src/redux/action/product.action\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const product = useSelector<StoreState, IProductState>(\r\n    (state) => state.product\r\n  );\r\n\r\n  let numberPage = [];\r\n  for (var i = 0; i < product.totalPage; i++) {\r\n    numberPage.push(i + 1);\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getProductCount());\r\n  }, [product.productCount.count]);\r\n\r\n  useEffect(() => {\r\n    const getProductPerPageReq = {\r\n      num_per_page: \"9\",\r\n      page: product.page.toString(),\r\n    };\r\n    dispatch(getProductPerPage(getProductPerPageReq));\r\n  }, []);\r\n\r\n  const handleLoadNextPage = (pageNum: string) => () => {\r\n    console.log(pageNum);\r\n    const getProductPerPageReq = {\r\n      num_per_page: \"9\",\r\n      page: pageNum,\r\n    };\r\n    dispatch(getProductPerPage(getProductPerPageReq));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        {product.products.map((item) => (\r\n          <Grid item xs={12} sm={4}>\r\n            <CardItem item={item} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <div className={classes.paper}>\r\n        {numberPage.map((pageNumber) => (\r\n          <Button\r\n            className={classes.paper}\r\n            onClick={handleLoadNextPage(pageNumber.toString())}\r\n          >\r\n            {pageNumber}\r\n          </Button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: \"center\",\r\n      alignItems: \"center\",\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  })\r\n);\r\n","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\action\\error.action.ts",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\shared\\ultis\\color.ts",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\Account\\components\\index.tsx",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\layout\\MainLayout\\NavBar\\NavItem.tsx",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\layout\\MainLayout\\TopBar\\TopBar.tsx",["280"],"import React, { useState } from \"react\";\r\nimport {\r\n  fade,\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SvgIcon, { SvgIconProps } from \"@material-ui/core/SvgIcon\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport CompareIcon from \"@material-ui/icons/Compare\";\r\nimport { IUserState } from \"src/redux/reducer/user.reducer\";\r\nimport { StoreState } from \"src/redux/store/store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  getCartDetail,\r\n  getWishList,\r\n  logout,\r\n} from \"src/redux/action/user.action\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getAllNews } from \"src/redux/action/new.action\";\r\nimport { INewRes } from \"src/shared/type/new.type\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IGetCartDetailRes } from \"src/shared/type/cart.type\";\r\nimport { IProductState } from \"src/redux/reducer/product.reducer\";\r\nimport { IGetWishlistDetailRes } from \"src/shared/type/wishlist.type\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    authButton: {\r\n      marginLeft: \"auto\",\r\n    },\r\n    search: {\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      \"&:hover\": {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginLeft: theme.spacing(3),\r\n      width: \"100%\",\r\n      border: \"0.5px solid white\",\r\n      color: \"white\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        width: \"auto\",\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: \"100%\",\r\n      color: \"white\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    inputRoot: {\r\n      color: \"inherit\",\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      transition: theme.transitions.create(\"width\"),\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n    userContainer: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n    badge: {\r\n      border: `2px`,\r\n      justifyContent: \"center\",\r\n      display: \"flex\",\r\n      color: \"white\",\r\n      height: \"100%\",\r\n    },\r\n  })\r\n);\r\n\r\nfunction HomeIcon(props: SvgIconProps) {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nconst TopBar = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const user = useSelector<StoreState, IUserState>((state) => state.user);\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const product = useSelector<StoreState, IProductState>(\r\n    (state) => state.product\r\n  );\r\n\r\n  const handleSearchProduct = async (event: any) => {\r\n    if (value) {\r\n      history.push(`/search-product/${value}`);\r\n    }\r\n  };\r\n\r\n  const handleCompare = () => {\r\n    history.push(\"/compare\");\r\n  };\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleGetNews = async () => {\r\n    const result = ((await dispatch(getAllNews())) as any) as INewRes;\r\n    if (result.status == true) {\r\n      history.push(\"/news\");\r\n    }\r\n  };\r\n\r\n  const handleCart = async () => {\r\n    const result = ((await dispatch(\r\n      getCartDetail()\r\n    )) as any) as IGetCartDetailRes;\r\n    if (result.status) {\r\n      history.push(\"/cart\");\r\n    }\r\n  };\r\n\r\n  const handleWishList = async () => {\r\n    const result = ((await dispatch(\r\n      getWishList()\r\n    )) as any) as IGetWishlistDetailRes;\r\n    if (result.status) {\r\n      history.push(\"/wishlist\");\r\n    }\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const Profile = () => {\r\n    handleMenuClose();\r\n    history.push(\"/account\");\r\n  };\r\n\r\n  const logOut = () => {\r\n    handleMenuClose();\r\n    dispatch(logout());\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const [value, setValue] = useState<string>(\"\");\r\n\r\n  const handleChange = (event: any) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={Profile}>Profile</MenuItem>\r\n      <MenuItem onClick={logOut}>Log out</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <a href=\"\\\" className={classes.badge}>\r\n              <HomeIcon style={{ fontSize: 40 }} />\r\n            </a>\r\n          </IconButton>\r\n          <Button color=\"inherit\" onClick={handleGetNews}>\r\n            <Typography variant=\"h6\">News</Typography>\r\n          </Button>\r\n          <div className={classes.search}>\r\n            <IconButton\r\n              className={classes.searchIcon}\r\n              onClick={handleSearchProduct}\r\n            >\r\n              <SearchIcon />\r\n            </IconButton>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className={classes.authButton}>\r\n            {!user.isLoggedIn ? (\r\n              <div>\r\n                <Button color=\"inherit\">\r\n                  <a href=\"\\auth\\sign-in\" className={classes.badge}>\r\n                    Sign in\r\n                  </a>\r\n                </Button>\r\n                <Button color=\"inherit\">\r\n                  <a href=\"\\auth\\sign-up\" className={classes.badge}>\r\n                    Sign up\r\n                  </a>\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <div className={classes.userContainer}>\r\n                <IconButton aria-label=\"compare\" onClick={handleCompare}>\r\n                  <Badge\r\n                    className={classes.badge}\r\n                    badgeContent={\r\n                      !product.productsToCompare\r\n                        ? 0\r\n                        : product.productsToCompare.length\r\n                    }\r\n                    color=\"secondary\"\r\n                  >\r\n                    <CompareIcon />\r\n                  </Badge>\r\n                </IconButton>\r\n                <IconButton aria-label=\"favorite\" onClick={handleWishList}>\r\n                  <Badge\r\n                    className={classes.badge}\r\n                    badgeContent={!user.wishList ? 0 : user.wishList.length}\r\n                    color=\"secondary\"\r\n                  >\r\n                    <FavoriteIcon />\r\n                  </Badge>\r\n                </IconButton>\r\n                <IconButton aria-label=\"cart\" onClick={handleCart}>\r\n                  <Badge\r\n                    className={classes.badge}\r\n                    badgeContent={\r\n                      !user.cart\r\n                        ? 0\r\n                        : user.cart.reduce((a, b) => a + Number(b.qty), 0)\r\n                    }\r\n                    color=\"secondary\"\r\n                  >\r\n                    <ShoppingCartIcon />\r\n                  </Badge>\r\n                </IconButton>\r\n                <div style={{ marginLeft: 10, width: 150, textAlign: \"right\" }}>\r\n                  <Typography noWrap display=\"block\">\r\n                    {user.user?.username}\r\n                  </Typography>\r\n                </div>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleProfileMenuOpen}\r\n                  color=\"inherit\"\r\n                >\r\n                  <Avatar alt={user.user?.username} />\r\n                </IconButton>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {!user.isLoggedIn ? null : renderMenu}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n",["281","282"],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\web\\Checkout\\Checkout.tsx",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\action\\loading.action.ts",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\SignIn\\SignIn.tsx",["283","284","285"],"import React, { useEffect, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LoginReq, LoginRes } from \"../../../shared/type/user.type\";\r\nimport { StoreState } from \"../../../redux/store/store\";\r\nimport { IUserState } from \"../../../redux/reducer/user.reducer\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { login } from \"../../../redux/action/user.action\";\r\nimport SvgIcon, { SvgIconProps } from \"@material-ui/core/SvgIcon\";\r\n\r\ninterface Props {}\r\n\r\nexport interface ILoginField {\r\n  name: string;\r\n  type: string;\r\n  label: string;\r\n}\r\n\r\nconst FieldArr: ILoginField[] = [\r\n  {\r\n    name: \"email\",\r\n    type: \"text\",\r\n    label: \"Email của bạn\",\r\n  },\r\n  {\r\n    name: \"password\",\r\n    type: \"password\",\r\n    label: \"Mật khẩu\",\r\n  },\r\n];\r\n\r\nfunction HomeIcon(props: SvgIconProps) {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  margin: {\r\n    margin: 12,\r\n  },\r\n  padding: {\r\n    padding: \"64px 32px\",\r\n  },\r\n  inputContainer: {\r\n    margin: \"18px 0\",\r\n  },\r\n}));\r\n\r\nexport default function SignIn(props: Props) {\r\n  const classes = useStyles();\r\n\r\n  //React Hook Function\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  //Reducer State\r\n  const user = useSelector<StoreState, IUserState>((state) => state.user);\r\n\r\n  const [valueForm, setValueForm] = useState<LoginReq>({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleLogin = async () => {\r\n    // Logic login here\r\n    const result = ((await dispatch(login(valueForm))) as any) as LoginRes;\r\n    if (result.data.jwt) {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user.isLoggedIn) {\r\n      history.push(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Button onClick={() => history.push(\"/\")}>\r\n          <HomeIcon style={{ fontSize: 50 }} />\r\n        </Button>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <div className={classes.margin}>\r\n          <Grid container>\r\n            {FieldArr.map((field) => (\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                className={classes.inputContainer}\r\n                key={field.name}\r\n              >\r\n                <TextField\r\n                  {...field}\r\n                  fullWidth\r\n                  autoFocus\r\n                  variant=\"outlined\"\r\n                  value={valueForm[field.name as keyof LoginReq]}\r\n                  onChange={(event) =>\r\n                    setValueForm({\r\n                      ...valueForm,\r\n                      [field.name]: event.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          <Grid item xs={12} style={{ marginTop: \"10px\" }}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              onClick={handleLogin}\r\n              style={{\r\n                textTransform: \"none\",\r\n                padding: 6,\r\n              }}\r\n            >\r\n              Đăng nhập\r\n            </Button>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"/auth/sign-up\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\SignUp\\SignUp.tsx",["286","287","288","289"],"import {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { StoreState } from \"../../../redux/store/store\";\r\nimport { IUserState } from \"../../../redux/reducer/user.reducer\";\r\nimport { RegisterReq, RegisterRes } from \"../../../shared/type/user.type\";\r\nimport { register } from \"../../../redux/action/user.action\";\r\nimport { TextColor } from \"../../../shared/ultis/color\";\r\nimport SvgIcon, { SvgIconProps } from \"@material-ui/core/SvgIcon\";\r\nimport { FieldArr } from \"./SignUpForm\";\r\nimport { ImageViewer } from \"..\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    textAlign: \"center\",\r\n    width: \"100%\",\r\n    padding: 20,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    background: \"linear-gradient(to right, #2980B9, #6DD5FA, #EDF3F6)\",\r\n  },\r\n  margin: {\r\n    margin: 12,\r\n  },\r\n  padding: {\r\n    padding: \"64px 32px\",\r\n  },\r\n  inputContainer: {\r\n    margin: \"1px 2\",\r\n  },\r\n}));\r\n\r\nfunction HomeIcon(props: SvgIconProps) {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\ninterface Props {}\r\n\r\nexport default function SingUp() {\r\n  const classes = useStyles();\r\n  //React Hook Function\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  //Reducer State\r\n  const user = useSelector<StoreState, IUserState>((state) => state.user);\r\n\r\n  // State\r\n  const [valueForm, setValueForm] = useState<RegisterReq>({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    city: \"\",\r\n    street: \"\",\r\n    company: \"\",\r\n    phone: \"\",\r\n    confirm_password: \"\",\r\n    image: null,\r\n  });\r\n\r\n  const handleRegister = async () => {\r\n    const result = ((await dispatch(\r\n      register(valueForm as any)\r\n    )) as any) as RegisterRes;\r\n    if (result.status == true) {\r\n      history.push(\"/auth/sign-in\");\r\n    }\r\n    if (result.status == false) {\r\n      history.push(\"/auth/sign-up\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user.isLoggedIn) {\r\n      history.push(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container component=\"main\" maxWidth=\"md\">\r\n        <Paper elevation={3} className={classes.padding}>\r\n          <div className={classes.margin}>\r\n            <Grid>\r\n              <Button onClick={() => history.push(\"/\")}>\r\n                <HomeIcon style={{ fontSize: 50 }} />\r\n              </Button>\r\n              <Typography\r\n                variant=\"h5\"\r\n                component=\"h6\"\r\n                style={{ color: TextColor.blueDark }}\r\n              >\r\n                Đăng ký\r\n              </Typography>\r\n            </Grid>\r\n            <Grid container>\r\n              {FieldArr.map((field) => (\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  sm={6}\r\n                  className={classes.inputContainer}\r\n                  key={field.name}\r\n                >\r\n                  <TextField\r\n                    {...field}\r\n                    fullWidth\r\n                    autoFocus\r\n                    variant=\"outlined\"\r\n                    value={valueForm[field.name as keyof RegisterReq]}\r\n                    onChange={(event) =>\r\n                      setValueForm({\r\n                        ...valueForm,\r\n                        [field.name]: event.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                </Grid>\r\n              ))}\r\n              <Grid item xs={12} style={{ marginTop: \"10px\" }}>\r\n                <ImageViewer\r\n                  aspectRatio={4 / 3}\r\n                  onSave={(cropData: any) => {\r\n                    setValueForm({ ...valueForm, image: cropData });\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} style={{ marginTop: \"10px\" }}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                fullWidth\r\n                onClick={handleRegister}\r\n                style={{\r\n                  textTransform: \"none\",\r\n                  padding: 6,\r\n                }}\r\n              >\r\n                Đăng ký\r\n              </Button>\r\n            </Grid>\r\n          </div>\r\n          <div style={{ marginTop: 24 }}>\r\n            <Link to=\"/auth/sign-in\" style={{ color: TextColor.blueDark }}>\r\n              Đã là thành viên?{\" \"}\r\n              <b style={{ textDecorationLine: \"underline\" }}>\r\n                Đăng nhập tại đây!\r\n              </b>\r\n            </Link>\r\n          </div>\r\n        </Paper>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\reducer\\loading.reducer.ts",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\layout\\index.ts",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\web\\Checkout\\components\\OrderForm\\OrderForm.tsx",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\layout\\MainLayout\\MainLayout.tsx",["290"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport TopBar from \"./TopBar/TopBar\";\r\nimport NavBar from \"./NavBar/NavBar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  wrapper: {\r\n    display: \"flex\",\r\n    flex: \"1 1 auto\",\r\n    overflow: \"hidden\",\r\n  },\r\n  contentContainer: {\r\n    display: \"flex\",\r\n    flex: \"1 1 auto\",\r\n    overflow: \"hidden\",\r\n  },\r\n  content: {\r\n    flex: \"1 1 auto\",\r\n    height: \"100%\",\r\n    overflow: \"auto\",\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: \"100%\",\r\n    margin: \"0 auto\",\r\n    padding: theme.spacing(5),\r\n  },\r\n}));\r\n\r\ninterface RouteProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst MainLayout = (props: RouteProps) => {\r\n  const { children } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <TopBar />\r\n      <NavBar />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>{children}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n",["291","292"],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\CardItem\\components\\AddToCart\\AddToCart.tsx",["293","294","295","296"],"import React, { Fragment } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { StoreState } from \"src/redux/store/store\";\r\nimport { IUserState } from \"src/redux/reducer/user.reducer\";\r\nimport { IProductIDReq } from \"src/shared/type/product.type\";\r\nimport { addProductToCart, getCartDetail } from \"src/redux/action/user.action\";\r\nimport { IGetCartDetailRes } from \"src/shared/type/cart.type\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: 70,\r\n      border: \"none\",\r\n      borderRadius: 30,\r\n      height: 30,\r\n      backgroundColor: \"#43ABC9\",\r\n      outline: \"none\",\r\n      color: \"#fff\",\r\n      fontSize: 12,\r\n      marginRight: 10,\r\n      marginLeft: 10,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      textTransform: \"none\",\r\n    },\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  product_id: string;\r\n}\r\n\r\n//To do: Add logic add to cart\r\n\r\nexport default function AddToCart(props: Props) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  // get UserState from useReducer\r\n  const handleAddToCart = async () => {\r\n    let addToCartReq: IProductIDReq = {\r\n      product_id: props.product_id,\r\n    };\r\n    const result = ((await dispatch(\r\n      addProductToCart(addToCartReq)\r\n    )) as any) as IGetCartDetailRes;\r\n    if (result.status) {\r\n      const result2 = (await dispatch(getCartDetail())) as any;\r\n      if (result2.status) {\r\n        console.log(\"Ok\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Button className={classes.root} onClick={handleAddToCart}>\r\n        <ShoppingCartIcon />\r\n        Thêm\r\n      </Button>\r\n    </Fragment>\r\n  );\r\n}\r\n","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\Account\\components\\Profile\\Profile.tsx",["297"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Grid,\r\n  Divider,\r\n  TextField,\r\n  makeStyles,\r\n  colors,\r\n} from \"@material-ui/core\";\r\nimport { StoreState } from \"../../../../../redux/store/store\";\r\nimport { IUserState } from \"../../../../../redux/reducer/user.reducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FieldArr2 } from \"src/components/common/SignUp/SignUpForm\";\r\nimport { UpdateUserReq } from \"src/shared/type/user.type\";\r\nimport { getUserInfo, updateUserInfo } from \"src/redux/action/user.action\";\r\nimport { setSuccessNoti } from \"src/redux/action/success.action\";\r\nimport { ImageViewer } from \"src/components/common\";\r\nimport { ImageProfileUrl } from \"src/shared/ultis/intl.utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  saveButton: {\r\n    color: \"white\",\r\n    backgroundColor: colors.green[600],\r\n    \"&:hover\": {\r\n      backgroundColor: colors.green[900],\r\n    },\r\n  },\r\n}));\r\ninterface Props {}\r\n\r\nconst Profile = (props: Props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector<StoreState, IUserState>((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const result = (await dispatch(getUserInfo())) as any;\r\n        if (result.status) {\r\n          user.user = result.data;\r\n        }\r\n      } catch (err) {}\r\n    })();\r\n  }, [user.isLoggedIn]);\r\n\r\n  const [values, setValues] = useState<UpdateUserReq>({\r\n    username: user.user?.username! || \"\",\r\n    first_name: user.user?.first_name! || \"\",\r\n    last_name: user.user?.last_name! || \"\",\r\n    email: user.user?.email! || \"\",\r\n    phone: user.user?.phone! || \"\",\r\n    city: user.user?.city! || \"\",\r\n    street: user.user?.street! || \"\",\r\n    company: user.user?.company! || \"\",\r\n    image: null,\r\n  });\r\n  const handleChange = (event: any) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSaveProfile = async (event: any) => {\r\n    try {\r\n      let formData = new FormData();\r\n      formData.append(\"image\", values.image);\r\n      formData.append(\"username\", values.username);\r\n      formData.append(\"email\", values.email);\r\n      formData.append(\"first_name\", values.first_name);\r\n      formData.append(\"last_name\", values.last_name);\r\n      formData.append(\"phone\", values.phone);\r\n      formData.append(\"city\", values.city);\r\n      formData.append(\"stress\", values.street);\r\n      formData.append(\"company\", values.company);\r\n\r\n      let result;\r\n      if (values.image) {\r\n        result = await dispatch(updateUserInfo(formData));\r\n      } else {\r\n        result = await dispatch(updateUserInfo(values));\r\n      }\r\n      if (Boolean(result)) {\r\n        dispatch(setSuccessNoti(\"Thay đổi thông tin thành công\"));\r\n        await dispatch(getUserInfo());\r\n      }\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <CardHeader title=\"Profile\" />\r\n          <Divider />\r\n          <CardContent>\r\n            <Grid container spacing={4}>\r\n              {FieldArr2.map((field) => (\r\n                <Grid key={field.name} item md={6} xs={12}>\r\n                  <TextField\r\n                    {...field}\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    required\r\n                    value={values[field.name as keyof UpdateUserReq]}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n              ))}\r\n              <Grid item xs={12} style={{ marginTop: \"10px\" }}>\r\n                <ImageViewer\r\n                  src={`${ImageProfileUrl}/small/${user.user?.image}`}\r\n                  aspectRatio={4 / 3}\r\n                  onSave={(cropData: any) => {\r\n                    setValues({ ...values, image: cropData });\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n          <Divider />\r\n          <CardActions>\r\n            <Button\r\n              className={classes.saveButton}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              onClick={handleSaveProfile}\r\n            >\r\n              Save Changes\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n",["298","299"],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\reducer\\error.reducer.ts",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\web\\Cart\\Cart.tsx",["300","301","302"],"import {\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  makeStyles,\r\n  Typography,\r\n  IconButton,\r\n  Tooltip,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport React, { useState } from \"react\";\r\nimport { getDisplayCurrency } from \"../../../shared/ultis/intl.utils\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Title from \"../../common/Title/Title\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { StoreState } from \"src/redux/store/store\";\r\nimport { IUserState } from \"src/redux/reducer/user.reducer\";\r\nimport { IProductIDReq } from \"src/shared/type/product.type\";\r\nimport {\r\n  addProductToCart,\r\n  deleteProductFromCart,\r\n  getCartDetail,\r\n  makeOrder,\r\n  removeOneProductFromCart,\r\n} from \"src/redux/action/user.action\";\r\nimport { ICartItem, IGetCartDetailRes } from \"src/shared/type/cart.type\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {},\r\n  imgStyle: {\r\n    height: 200,\r\n    width: 150,\r\n  },\r\n  nameContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  buttonContainer: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n    textAlign: \"end\",\r\n  },\r\n  infoUserContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  marginTopCommon: {\r\n    marginTop: 24,\r\n  },\r\n  addressForm: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  buttonPlace: {\r\n    backgroundColor: \"#ee4d2d\",\r\n    color: \"white\",\r\n  },\r\n});\r\n\r\ninterface Props {}\r\n\r\n// TODO: Convert to map => define Item type\r\nconst Cart = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const user = useSelector<StoreState, IUserState>((state) => state.user);\r\n\r\n  const cartInfo: ICartItem[] = user.cart;\r\n  const cartTotal: string = user.cartTotal;\r\n\r\n  const handleAddToCart = (id: string) => async () => {\r\n    let addToCartReq: IProductIDReq = {\r\n      product_id: id,\r\n    };\r\n    const result = (await dispatch(addProductToCart(addToCartReq))) as any;\r\n    if (result.status) {\r\n      const result2 = (await dispatch(getCartDetail())) as any;\r\n      if (result2.status) {\r\n        console.log(\"Ok\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRemoveOneProductFromCart = (id: string) => async () => {\r\n    let removeFromCartReq: IProductIDReq = {\r\n      product_id: id,\r\n    };\r\n    const result = (await dispatch(\r\n      removeOneProductFromCart(removeFromCartReq)\r\n    )) as any;\r\n    if (result.status) {\r\n      const result2 = (await dispatch(getCartDetail())) as any;\r\n      if (result2.status) {\r\n        console.log(\"Ok\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeleteProductFromCart = (id: string) => async () => {\r\n    let deleteFromCartReq: IProductIDReq = {\r\n      product_id: id,\r\n    };\r\n    const result = (await dispatch(\r\n      deleteProductFromCart(deleteFromCartReq)\r\n    )) as any;\r\n    if (result.status) {\r\n      const result2 = (await dispatch(getCartDetail())) as any;\r\n      if (result2.status) {\r\n        console.log(\"Ok\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleMakeOrder = async () => {\r\n    const result = (await dispatch(makeOrder())) as any;\r\n    if (result.status) {\r\n      console.log(\"Make Order thanh cong\");\r\n      history.push(`/checkout/${user.cartId}`, { cartInfo, cartTotal });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Title title=\"Thanh toán\" subTitle=\"Thanh toán giỏ hàng của bạn\" />\r\n      <TableContainer component={Paper}>\r\n        <Table\r\n          className={classes.table}\r\n          size=\"small\"\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\">Sản phẩm</TableCell>\r\n              <TableCell align=\"center\" style={{ width: \"15%\" }}>\r\n                Đơn giá\r\n              </TableCell>\r\n              <TableCell align=\"center\" style={{ width: \"15%\" }}>\r\n                Số lượng\r\n              </TableCell>\r\n              <TableCell align=\"center\" style={{ width: \"15%\" }}>\r\n                Thành tiền\r\n              </TableCell>\r\n              <TableCell align=\"center\" style={{ width: \"15%\" }}>\r\n                Thao tác\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {user.cart.map((item) => (\r\n              <TableRow>\r\n                <TableCell align=\"center\" className={classes.nameContainer}>\r\n                  <img\r\n                    className={classes.imgStyle}\r\n                    src={`${process.env.PUBLIC_URL}/images/harrypotter.jpg`}\r\n                  />\r\n                  <Typography style={{ marginLeft: 12 }}>\r\n                    {item.product_name}\r\n                  </Typography>\r\n                </TableCell>\r\n                <TableCell align=\"center\" style={{ width: \"15%\" }}>\r\n                  {getDisplayCurrency(Number(item.price))}\r\n                </TableCell>\r\n                <TableCell align=\"center\" style={{ width: \"15%\" }}>\r\n                  <IconButton onClick={handleAddToCart(item.product_id)}>\r\n                    <AddIcon />\r\n                  </IconButton>\r\n                  <Typography>{item.qty}</Typography>\r\n                  <IconButton>\r\n                    <RemoveIcon\r\n                      onClick={handleRemoveOneProductFromCart(item.product_id)}\r\n                    />\r\n                  </IconButton>\r\n                </TableCell>\r\n                <TableCell align=\"center\" style={{ width: \"15%\" }}>\r\n                  {getDisplayCurrency(Number(item.price) * Number(item.qty))}\r\n                </TableCell>\r\n                <TableCell align=\"center\" style={{ width: \"15%\" }}>\r\n                  <IconButton\r\n                    onClick={handleDeleteProductFromCart(item.product_id)}\r\n                  >\r\n                    <Tooltip title=\"Xóa sản phẩm\">\r\n                      <DeleteIcon />\r\n                    </Tooltip>\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <div className={classes.buttonContainer}>\r\n        <Button\r\n          variant=\"outlined\"\r\n          className={classes.buttonPlace}\r\n          color=\"inherit\"\r\n          onClick={handleMakeOrder}\r\n        >\r\n          Đặt hàng\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\CardItem\\components\\Detail\\Detail.tsx",["303","304","305"],"import React, { Fragment } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { IProductIDReq, IProductDetailRes } from \"src/shared/type/product.type\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: 70,\r\n      border: \"none\",\r\n      borderRadius: 30,\r\n      height: 30,\r\n      backgroundColor: \"#43ABC9\",\r\n      outline: \"none\",\r\n      color: \"#fff\",\r\n      fontSize: 12,\r\n      marginRight: 10,\r\n      marginLeft: 10,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      textTransform: \"none\",\r\n    },\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  product_id: string;\r\n}\r\n\r\n//To do: Add logic add to cart\r\n\r\nexport default function Detail(props: Props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  // get UserState from useReducer\r\n  const handleDetail = async () => {\r\n    history.push(`/product-detail/${props.product_id}`);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Button className={classes.root} onClick={handleDetail}>\r\n        Chi tiết\r\n      </Button>\r\n    </Fragment>\r\n  );\r\n}\r\n","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\web\\Checkout\\components\\AddressForm\\addressFields.ts",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\SignUp\\SignUpForm.ts",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\shared\\ultis\\intl.utils.ts",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\layout\\MainLayout\\NavBar\\NavBar.tsx",["306","307","308","309"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport NavItem, { ItemProps, NavItemProps } from \"./NavItem\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllCategory } from \"src/redux/action/product.action\";\r\nimport { IGetAllCategoryRes } from \"src/shared/type/product.type\";\r\nimport { IProductState } from \"src/redux/reducer/product.reducer\";\r\nimport { StoreState } from \"src/redux/store/store\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginLeft: 10,\r\n      marginTop: 10,\r\n      display: \"flex\",\r\n    },\r\n  })\r\n);\r\n\r\nconst UserItems: NavItemProps[] = [\r\n  {\r\n    name: \"Trang chủ\",\r\n    url: \"/\",\r\n  },\r\n  {\r\n    name: \"Quản lý\",\r\n    data: [\r\n      {\r\n        nameItem: \"Giỏ hàng\",\r\n        urlItem: \"/cart\",\r\n      },\r\n      {\r\n        nameItem: \"Sản phẩm ưa thích\",\r\n        urlItem: \"/wishlist\",\r\n      },\r\n      {\r\n        nameItem: \"Lịch sử đơn hàng\",\r\n        urlItem: \"/history-order\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: \"Liên hệ\",\r\n    url: \"/contact\",\r\n  },\r\n];\r\n\r\nexport default function NavBar() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const product = useSelector<StoreState, IProductState>(\r\n    (state) => state.product\r\n  );\r\n\r\n  let listCategoryTemp: ItemProps[] = [];\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const result = ((await dispatch(\r\n          getAllCategory()\r\n        )) as any) as IGetAllCategoryRes;\r\n        if (result.status) {\r\n          result.data.map((item) => {\r\n            listCategoryTemp.push({\r\n              nameItem: item.name,\r\n              urlItem: `/category/${item.category_id}`,\r\n            });\r\n          });\r\n        }\r\n        let danhmuc: NavItemProps = {\r\n          name: \"Danh mục\",\r\n          data: listCategoryTemp,\r\n        };\r\n        if (UserItems.length == 3) {\r\n          UserItems.push(danhmuc);\r\n        }\r\n      } catch (err) {}\r\n    })();\r\n  }, [product.isLoadedCategory]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {UserItems.map((item) => (\r\n        <NavItem {...item} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\Account\\Account.tsx",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\CardItem\\CardItem.tsx",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\ImageViewer\\ImageViewer.tsx",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\store\\store.ts",[],["310","311"],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\action\\new.action.ts",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\reducer\\new.reducer.ts",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\web\\New\\New.tsx",["312"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { StoreState } from \"src/redux/store/store\";\r\nimport { INewState } from \"src/redux/reducer/new.reducer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  new: {\r\n    width: \"100%\",\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n    marginLeft: 20,\r\n    marginRight: 20,\r\n  },\r\n}));\r\n\r\nconst New = () => {\r\n  const classes = useStyles();\r\n  const news = useSelector<StoreState, INewState>((state) => state.new);\r\n\r\n  //\r\n  return (\r\n    <div className={classes.new}>\r\n      {news.news.map((item) => {\r\n        return (\r\n          <>\r\n            <div className={classes.new}>\r\n              <Typography variant=\"h5\">{item.title}</Typography>\r\n              <div>{item.short_content}</div>\r\n              <div>{item.content}</div>\r\n            </div>\r\n          </>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default New;\r\n","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\reducer\\product.reducer.ts",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\action\\product.action.ts",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\redux\\action\\success.action.ts",[],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\common\\Account\\components\\Security\\Security.tsx",["313"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Grid,\r\n  Button,\r\n  Divider,\r\n  TextField,\r\n  colors,\r\n} from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updatePassword } from \"src/redux/action/user.action\";\r\nimport { StoreState } from \"src/redux/store/store\";\r\nimport { IUserState } from \"src/redux/reducer/user.reducer\";\r\nimport { UpdatePasswordReq } from \"src/shared/type/user.type\";\r\nimport { setSuccessNoti } from \"src/redux/action/success.action\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  saveButton: {\r\n    color: \"white\",\r\n    backgroundColor: colors.green[600],\r\n    \"&:hover\": {\r\n      backgroundColor: colors.green[900],\r\n    },\r\n  },\r\n}));\r\ninterface Props {}\r\n\r\nconst SecurityField = [\r\n  {\r\n    label: \"Old Password\",\r\n    name: \"old_password\",\r\n  },\r\n  {\r\n    label: \"New Password\",\r\n    name: \"new_password\",\r\n  },\r\n  {\r\n    label: \"New Password Confirm\",\r\n    name: \"confirm_password\",\r\n  },\r\n];\r\n\r\ninterface IStateValue {\r\n  new_password: string;\r\n  old_password: string;\r\n  confirm_password: string;\r\n}\r\n\r\nconst Security = (props: Props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector<StoreState, IUserState>((state) => state.user);\r\n\r\n  const [values, setValues] = useState<IStateValue>({\r\n    old_password: \"\",\r\n    new_password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n\r\n  const valid =\r\n    values.new_password && values.new_password === values.confirm_password;\r\n\r\n  const handleChange = (event: any) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleUpdatePassword = async () => {\r\n    try {\r\n      const valueSubmit: UpdatePasswordReq = {\r\n        ...values,\r\n      };\r\n      const result = await dispatch(updatePassword(valueSubmit));\r\n      console.log(\r\n        \"🚀 ~ file: Security.tsx ~ line 82 ~ handleUpdatePassword ~ result\",\r\n        result\r\n      );\r\n      if (Boolean(result)) {\r\n        await dispatch(setSuccessNoti(\"Cập nhật mật khẩu thành công\"));\r\n      }\r\n    } catch (er) {}\r\n  };\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Change password\" />\r\n      <Divider />\r\n      <CardContent>\r\n        <form>\r\n          <Grid container spacing={3}>\r\n            {SecurityField.map((field) => (\r\n              <Grid key={field.name} item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  {...field}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values[field.name as keyof IStateValue]}\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </form>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions>\r\n        <Button\r\n          className={classes.saveButton}\r\n          variant=\"contained\"\r\n          disabled={!valid}\r\n          onClick={handleUpdatePassword}\r\n        >\r\n          Save changes\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Security;\r\n","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\web\\Search\\Search.tsx",["314","315","316","317","318","319","320"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardItem from \"../../common/CardItem/CardItem\";\r\nimport { IProductState } from \"src/redux/reducer/product.reducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { StoreState } from \"src/redux/store/store\";\r\nimport {\r\n  getProductCount,\r\n  getProductPerPage,\r\n  searchProductByName,\r\n} from \"src/redux/action/product.action\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport {\r\n  IProductDetail,\r\n  IProductPerPageRes,\r\n  searchProductByNameReq,\r\n} from \"src/shared/type/product.type\";\r\n\r\ninterface Props {\r\n  match: any;\r\n}\r\n\r\nexport default function Search(props: Props) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [listProduct, setListProduct] = useState<IProductDetail[]>(\r\n    [] as IProductDetail[]\r\n  );\r\n\r\n  const searchName = props.match.params.searchName;\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        let searchReq: searchProductByNameReq = {\r\n          product_name: searchName,\r\n        };\r\n        const result = ((await dispatch(\r\n          searchProductByName(searchReq)\r\n        )) as any) as IProductPerPageRes;\r\n        if (Boolean(result)) {\r\n          setListProduct(result.data);\r\n        }\r\n      } catch (err) {}\r\n    })();\r\n  }, [searchName]);\r\n\r\n  if (Object.values(listProduct).length === 0) {\r\n    return <div />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        {listProduct.map((item) => (\r\n          <Grid item xs={12} sm={4}>\r\n            <CardItem item={item} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: \"center\",\r\n      alignItems: \"center\",\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  })\r\n);\r\n","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\web\\WishList\\WishList.tsx",["321","322","323","324"],"import {\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  makeStyles,\r\n  Typography,\r\n  IconButton,\r\n  Tooltip,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Title from \"../../common/Title/Title\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { StoreState } from \"src/redux/store/store\";\r\nimport { IUserState } from \"src/redux/reducer/user.reducer\";\r\nimport { ShoppingCart } from \"@material-ui/icons\";\r\nimport { IProductIDReq } from \"src/shared/type/product.type\";\r\nimport {\r\n  addProductToCart,\r\n  deleteProductFromWishList,\r\n} from \"src/redux/action/user.action\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {},\r\n  imgStyle: {\r\n    height: 200,\r\n    width: 150,\r\n  },\r\n  nameContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  buttonContainer: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n    textAlign: \"end\",\r\n  },\r\n  infoUserContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  marginTopCommon: {\r\n    marginTop: 24,\r\n  },\r\n  addressForm: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  buttonPlace: {\r\n    backgroundColor: \"#ee4d2d\",\r\n    color: \"white\",\r\n  },\r\n});\r\n\r\ninterface Props {}\r\n\r\n// TODO: Convert to map => define Item type\r\nconst WishList = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const user = useSelector<StoreState, IUserState>((state) => state.user);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleAddToCart = (id: string) => async () => {\r\n    let addToCartReq: IProductIDReq = {\r\n      product_id: id,\r\n    };\r\n    const result = (await dispatch(addProductToCart(addToCartReq))) as any;\r\n    if (result.status) {\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  const handleDeleteFromWishlist = (id: string) => async () => {\r\n    let deleteFromWishlistReq: IProductIDReq = {\r\n      product_id: id,\r\n    };\r\n    const result = (await dispatch(\r\n      deleteProductFromWishList(deleteFromWishlistReq)\r\n    )) as any;\r\n    if (result.status) {\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Title title=\"Sản phẩm ưa thích\" subTitle=\"Sản phẩm ưa thích của bạn\" />\r\n      <TableContainer component={Paper}>\r\n        <Table\r\n          className={classes.table}\r\n          size=\"small\"\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\">Sản phẩm</TableCell>\r\n              <TableCell align=\"center\" style={{ width: \"15%\" }}>\r\n                Thao tác\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {user.wishList.map((item) => (\r\n              <TableRow>\r\n                <TableCell align=\"center\" className={classes.nameContainer}>\r\n                  <img\r\n                    className={classes.imgStyle}\r\n                    src={`${process.env.PUBLIC_URL}/images/harrypotter.jpg`}\r\n                  />\r\n                  <Typography style={{ marginLeft: 12 }}>\r\n                    {item.product_name}\r\n                  </Typography>\r\n                </TableCell>\r\n                <TableCell align=\"center\" style={{ width: \"15%\" }}>\r\n                  <IconButton onClick={handleAddToCart(item.product_id)}>\r\n                    <Tooltip title=\"Thêm vào giỏ hàng\">\r\n                      <ShoppingCart />\r\n                    </Tooltip>\r\n                  </IconButton>\r\n                </TableCell>\r\n                <TableCell align=\"center\" style={{ width: \"15%\" }}>\r\n                  <IconButton\r\n                    onClick={handleDeleteFromWishlist(item.product_id)}\r\n                  >\r\n                    <Tooltip title=\"Xóa sản phẩm\">\r\n                      <DeleteIcon />\r\n                    </Tooltip>\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WishList;\r\n","C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\web\\Compare\\Compare.tsx",["325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342"],"C:\\Users\\miu10\\Desktop\\Workspace\\my-app\\src\\components\\web\\Category\\Category.tsx",["343","344","345","346"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardItem from \"../../common/CardItem/CardItem\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  searchProductByCategory,\r\n  searchProductByName,\r\n} from \"src/redux/action/product.action\";\r\nimport {\r\n  IProductDetail,\r\n  IProductPerPageRes,\r\n  searchProductByCategoryReq,\r\n  searchProductByNameReq,\r\n} from \"src/shared/type/product.type\";\r\n\r\ninterface Props {\r\n  match: any;\r\n}\r\n\r\nexport default function Category(props: Props) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [listProduct, setListProduct] = useState<IProductDetail[]>(\r\n    [] as IProductDetail[]\r\n  );\r\n\r\n  const categoryId = props.match.params.categoryId;\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        let searchReq: searchProductByCategoryReq = {\r\n          category_id: categoryId,\r\n        };\r\n        const result = ((await dispatch(\r\n          searchProductByCategory(searchReq)\r\n        )) as any) as IProductPerPageRes;\r\n        if (Boolean(result)) {\r\n          setListProduct(result.data);\r\n        }\r\n      } catch (err) {}\r\n    })();\r\n  }, [categoryId]);\r\n\r\n  if (Object.values(listProduct).length === 0) {\r\n    return <div />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        {listProduct.map((item) => (\r\n          <Grid item xs={12} sm={4}>\r\n            <CardItem item={item} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: \"center\",\r\n      alignItems: \"center\",\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  })\r\n);\r\n",{"ruleId":"347","replacedBy":"348"},{"ruleId":"349","replacedBy":"350"},{"ruleId":"351","severity":1,"message":"352","line":1,"column":10,"nodeType":"353","messageId":"354","endLine":1,"endColumn":20},{"ruleId":"355","severity":1,"message":"356","line":26,"column":6,"nodeType":"357","endLine":26,"endColumn":23,"suggestions":"358"},{"ruleId":"347","replacedBy":"359"},{"ruleId":"349","replacedBy":"360"},{"ruleId":"355","severity":1,"message":"361","line":27,"column":6,"nodeType":"357","endLine":27,"endColumn":23,"suggestions":"362"},{"ruleId":"355","severity":1,"message":"361","line":35,"column":6,"nodeType":"357","endLine":35,"endColumn":23,"suggestions":"363"},{"ruleId":"364","severity":1,"message":"365","line":120,"column":5,"nodeType":"366","messageId":"367","endLine":124,"endColumn":6},{"ruleId":"368","severity":1,"message":"369","line":17,"column":1,"nodeType":"370","endLine":30,"endColumn":20},{"ruleId":"347","replacedBy":"371"},{"ruleId":"349","replacedBy":"372"},{"ruleId":"351","severity":1,"message":"373","line":3,"column":8,"nodeType":"353","messageId":"354","endLine":3,"endColumn":12},{"ruleId":"351","severity":1,"message":"352","line":4,"column":21,"nodeType":"353","messageId":"354","endLine":4,"endColumn":31},{"ruleId":"351","severity":1,"message":"374","line":16,"column":10,"nodeType":"353","messageId":"354","endLine":16,"endColumn":25},{"ruleId":"351","severity":1,"message":"375","line":31,"column":9,"nodeType":"353","messageId":"354","endLine":31,"endColumn":16},{"ruleId":"355","severity":1,"message":"376","line":67,"column":6,"nodeType":"357","endLine":67,"endColumn":8,"suggestions":"377"},{"ruleId":"351","severity":1,"message":"378","line":1,"column":28,"nodeType":"353","messageId":"354","endLine":1,"endColumn":36},{"ruleId":"351","severity":1,"message":"379","line":4,"column":21,"nodeType":"353","messageId":"354","endLine":4,"endColumn":35},{"ruleId":"351","severity":1,"message":"380","line":12,"column":23,"nodeType":"353","messageId":"354","endLine":12,"endColumn":36},{"ruleId":"355","severity":1,"message":"381","line":33,"column":6,"nodeType":"357","endLine":33,"endColumn":23,"suggestions":"382"},{"ruleId":"355","severity":1,"message":"361","line":28,"column":6,"nodeType":"357","endLine":28,"endColumn":34,"suggestions":"383"},{"ruleId":"355","severity":1,"message":"384","line":36,"column":6,"nodeType":"357","endLine":36,"endColumn":8,"suggestions":"385"},{"ruleId":"386","severity":1,"message":"387","line":137,"column":23,"nodeType":"388","messageId":"367","endLine":137,"endColumn":25},{"ruleId":"347","replacedBy":"389"},{"ruleId":"349","replacedBy":"390"},{"ruleId":"351","severity":1,"message":"391","line":2,"column":8,"nodeType":"353","messageId":"354","endLine":2,"endColumn":14},{"ruleId":"351","severity":1,"message":"392","line":9,"column":8,"nodeType":"353","messageId":"354","endLine":9,"endColumn":24},{"ruleId":"355","severity":1,"message":"393","line":119,"column":6,"nodeType":"357","endLine":119,"endColumn":8,"suggestions":"394"},{"ruleId":"351","severity":1,"message":"395","line":51,"column":11,"nodeType":"353","messageId":"354","endLine":51,"endColumn":16},{"ruleId":"386","severity":1,"message":"387","line":81,"column":23,"nodeType":"388","messageId":"367","endLine":81,"endColumn":25},{"ruleId":"386","severity":1,"message":"387","line":84,"column":23,"nodeType":"388","messageId":"367","endLine":84,"endColumn":25},{"ruleId":"355","severity":1,"message":"393","line":93,"column":6,"nodeType":"357","endLine":93,"endColumn":8,"suggestions":"396"},{"ruleId":"351","severity":1,"message":"378","line":1,"column":17,"nodeType":"353","messageId":"354","endLine":1,"endColumn":25},{"ruleId":"347","replacedBy":"397"},{"ruleId":"349","replacedBy":"398"},{"ruleId":"351","severity":1,"message":"399","line":5,"column":23,"nodeType":"353","messageId":"354","endLine":5,"endColumn":34},{"ruleId":"351","severity":1,"message":"400","line":6,"column":10,"nodeType":"353","messageId":"354","endLine":6,"endColumn":20},{"ruleId":"351","severity":1,"message":"401","line":7,"column":10,"nodeType":"353","messageId":"354","endLine":7,"endColumn":20},{"ruleId":"351","severity":1,"message":"402","line":11,"column":10,"nodeType":"353","messageId":"354","endLine":11,"endColumn":20},{"ruleId":"355","severity":1,"message":"381","line":50,"column":6,"nodeType":"357","endLine":50,"endColumn":23,"suggestions":"403"},{"ruleId":"347","replacedBy":"404"},{"ruleId":"349","replacedBy":"405"},{"ruleId":"351","severity":1,"message":"378","line":17,"column":17,"nodeType":"353","messageId":"354","endLine":17,"endColumn":25},{"ruleId":"351","severity":1,"message":"406","line":33,"column":21,"nodeType":"353","messageId":"354","endLine":33,"endColumn":38},{"ruleId":"407","severity":1,"message":"408","line":163,"column":19,"nodeType":"409","endLine":166,"endColumn":21},{"ruleId":"351","severity":1,"message":"410","line":4,"column":10,"nodeType":"353","messageId":"354","endLine":4,"endColumn":21},{"ruleId":"351","severity":1,"message":"411","line":5,"column":10,"nodeType":"353","messageId":"354","endLine":5,"endColumn":23},{"ruleId":"351","severity":1,"message":"412","line":5,"column":25,"nodeType":"353","messageId":"354","endLine":5,"endColumn":42},{"ruleId":"351","severity":1,"message":"378","line":1,"column":28,"nodeType":"353","messageId":"354","endLine":1,"endColumn":36},{"ruleId":"413","severity":1,"message":"414","line":63,"column":34,"nodeType":"415","messageId":"416","endLine":63,"endColumn":36},{"ruleId":"386","severity":1,"message":"387","line":74,"column":30,"nodeType":"388","messageId":"367","endLine":74,"endColumn":32},{"ruleId":"355","severity":1,"message":"417","line":79,"column":6,"nodeType":"357","endLine":79,"endColumn":32,"suggestions":"418"},{"ruleId":"347","replacedBy":"419"},{"ruleId":"349","replacedBy":"420"},{"ruleId":"351","severity":1,"message":"410","line":4,"column":10,"nodeType":"353","messageId":"354","endLine":4,"endColumn":21},{"ruleId":"351","severity":1,"message":"421","line":57,"column":9,"nodeType":"353","messageId":"354","endLine":57,"endColumn":13},{"ruleId":"351","severity":1,"message":"422","line":5,"column":10,"nodeType":"353","messageId":"354","endLine":5,"endColumn":23},{"ruleId":"351","severity":1,"message":"399","line":6,"column":23,"nodeType":"353","messageId":"354","endLine":6,"endColumn":34},{"ruleId":"351","severity":1,"message":"400","line":7,"column":10,"nodeType":"353","messageId":"354","endLine":7,"endColumn":20},{"ruleId":"351","severity":1,"message":"423","line":9,"column":3,"nodeType":"353","messageId":"354","endLine":9,"endColumn":18},{"ruleId":"351","severity":1,"message":"424","line":10,"column":3,"nodeType":"353","messageId":"354","endLine":10,"endColumn":20},{"ruleId":"351","severity":1,"message":"425","line":13,"column":10,"nodeType":"353","messageId":"354","endLine":13,"endColumn":16},{"ruleId":"355","severity":1,"message":"361","line":47,"column":6,"nodeType":"357","endLine":47,"endColumn":18,"suggestions":"426"},{"ruleId":"351","severity":1,"message":"425","line":13,"column":3,"nodeType":"353","messageId":"354","endLine":13,"endColumn":9},{"ruleId":"351","severity":1,"message":"378","line":15,"column":17,"nodeType":"353","messageId":"354","endLine":15,"endColumn":25},{"ruleId":"351","severity":1,"message":"427","line":67,"column":9,"nodeType":"353","messageId":"354","endLine":67,"endColumn":16},{"ruleId":"407","severity":1,"message":"408","line":116,"column":19,"nodeType":"409","endLine":119,"endColumn":21},{"ruleId":"351","severity":1,"message":"428","line":1,"column":17,"nodeType":"353","messageId":"354","endLine":1,"endColumn":26},{"ruleId":"351","severity":1,"message":"378","line":1,"column":28,"nodeType":"353","messageId":"354","endLine":1,"endColumn":36},{"ruleId":"351","severity":1,"message":"429","line":2,"column":10,"nodeType":"353","messageId":"354","endLine":2,"endColumn":20},{"ruleId":"351","severity":1,"message":"430","line":2,"column":22,"nodeType":"353","messageId":"354","endLine":2,"endColumn":34},{"ruleId":"351","severity":1,"message":"431","line":2,"column":36,"nodeType":"353","messageId":"354","endLine":2,"endColumn":41},{"ruleId":"351","severity":1,"message":"373","line":3,"column":8,"nodeType":"353","messageId":"354","endLine":3,"endColumn":12},{"ruleId":"351","severity":1,"message":"432","line":4,"column":10,"nodeType":"353","messageId":"354","endLine":4,"endColumn":19},{"ruleId":"351","severity":1,"message":"352","line":4,"column":21,"nodeType":"353","messageId":"354","endLine":4,"endColumn":31},{"ruleId":"351","severity":1,"message":"433","line":5,"column":8,"nodeType":"353","messageId":"354","endLine":5,"endColumn":16},{"ruleId":"351","severity":1,"message":"434","line":7,"column":8,"nodeType":"353","messageId":"354","endLine":7,"endColumn":13},{"ruleId":"351","severity":1,"message":"435","line":9,"column":3,"nodeType":"353","messageId":"354","endLine":9,"endColumn":17},{"ruleId":"351","severity":1,"message":"411","line":10,"column":3,"nodeType":"353","messageId":"354","endLine":10,"endColumn":16},{"ruleId":"351","severity":1,"message":"412","line":11,"column":3,"nodeType":"353","messageId":"354","endLine":11,"endColumn":20},{"ruleId":"351","severity":1,"message":"410","line":13,"column":10,"nodeType":"353","messageId":"354","endLine":13,"endColumn":21},{"ruleId":"351","severity":1,"message":"436","line":15,"column":3,"nodeType":"353","messageId":"354","endLine":15,"endColumn":19},{"ruleId":"351","severity":1,"message":"437","line":16,"column":3,"nodeType":"353","messageId":"354","endLine":16,"endColumn":22},{"ruleId":"351","severity":1,"message":"438","line":18,"column":10,"nodeType":"353","messageId":"354","endLine":18,"endColumn":17},{"ruleId":"351","severity":1,"message":"401","line":20,"column":10,"nodeType":"353","messageId":"354","endLine":20,"endColumn":20},{"ruleId":"351","severity":1,"message":"399","line":5,"column":23,"nodeType":"353","messageId":"354","endLine":5,"endColumn":34},{"ruleId":"351","severity":1,"message":"439","line":8,"column":3,"nodeType":"353","messageId":"354","endLine":8,"endColumn":22},{"ruleId":"351","severity":1,"message":"440","line":14,"column":3,"nodeType":"353","messageId":"354","endLine":14,"endColumn":25},{"ruleId":"355","severity":1,"message":"361","line":44,"column":6,"nodeType":"357","endLine":44,"endColumn":18,"suggestions":"441"},"no-native-reassign",["442"],"no-negated-in-lhs",["443"],"@typescript-eslint/no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["444"],["442"],["443"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["445"],["446"],"no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["442"],["443"],"'Grid' is defined but never used.","'DriveEtaTwoTone' is defined but never used.","'classes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'productDetailReq'. Either include them or remove the dependency array.",["447"],"'useState' is defined but never used.","'TextFieldProps' is defined but never used.","'UpdateUserReq' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'user'. Either include them or remove the dependency array.",["448"],["449"],"React Hook useEffect has missing dependencies: 'dispatch' and 'product.page'. Either include them or remove the dependency array.",["450"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",["442"],["443"],"'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'user.isLoggedIn'. Either include them or remove the dependency array.",["451"],"'Props' is defined but never used.",["452"],["442"],["443"],"'useSelector' is defined but never used.","'StoreState' is defined but never used.","'IUserState' is defined but never used.","'useHistory' is defined but never used.",["453"],["442"],["443"],"'IGetCartDetailRes' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useDispatch' is defined but never used.","'IProductIDReq' is defined but never used.","'IProductDetailRes' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'dispatch' and 'listCategoryTemp'. Either include them or remove the dependency array.",["454"],["442"],["443"],"'user' is assigned a value but never used.","'IProductState' is defined but never used.","'getProductCount' is defined but never used.","'getProductPerPage' is defined but never used.","'Button' is defined but never used.",["455"],"'history' is assigned a value but never used.","'useEffect' is defined but never used.","'makeStyles' is defined but never used.","'createStyles' is defined but never used.","'Theme' is defined but never used.","'TextField' is defined but never used.","'CardItem' is defined but never used.","'Title' is defined but never used.","'IProductDetail' is defined but never used.","'getProductDetail' is defined but never used.","'getProductToCompare' is defined but never used.","'comment' is defined but never used.","'searchProductByName' is defined but never used.","'searchProductByNameReq' is defined but never used.",["456"],"no-global-assign","no-unsafe-negation",{"desc":"457","fix":"458"},{"desc":"459","fix":"460"},{"desc":"461","fix":"462"},{"desc":"463","fix":"464"},{"desc":"465","fix":"466"},{"desc":"467","fix":"468"},{"desc":"469","fix":"470"},{"desc":"457","fix":"471"},{"desc":"457","fix":"472"},{"desc":"465","fix":"473"},{"desc":"474","fix":"475"},{"desc":"476","fix":"477"},{"desc":"478","fix":"479"},"Update the dependencies array to be: [history, user.isLoggedIn]",{"range":"480","text":"481"},"Update the dependencies array to be: [dispatch, user.loadedInfo]",{"range":"482","text":"483"},"Update the dependencies array to be: [dispatch, user.isLoggedIn]",{"range":"484","text":"485"},"Update the dependencies array to be: [dispatch, productDetailReq]",{"range":"486","text":"487"},"Update the dependencies array to be: [dispatch, user, user.isLoggedIn]",{"range":"488","text":"489"},"Update the dependencies array to be: [dispatch, product.productCount.count]",{"range":"490","text":"491"},"Update the dependencies array to be: [dispatch, product.page]",{"range":"492","text":"493"},{"range":"494","text":"481"},{"range":"495","text":"481"},{"range":"496","text":"489"},"Update the dependencies array to be: [dispatch, listCategoryTemp, product.isLoadedCategory]",{"range":"497","text":"498"},"Update the dependencies array to be: [dispatch, searchName]",{"range":"499","text":"500"},"Update the dependencies array to be: [categoryId, dispatch]",{"range":"501","text":"502"},[846,863],"[history, user.isLoggedIn]",[698,715],"[dispatch, user.loadedInfo]",[880,897],"[dispatch, user.isLoggedIn]",[1948,1950],"[dispatch, productDetailReq]",[1206,1223],"[dispatch, user, user.isLoggedIn]",[907,935],"[dispatch, product.productCount.count]",[1131,1133],"[dispatch, product.page]",[3079,3081],[2309,2311],[1464,1481],[2044,2070],"[dispatch, listCategoryTemp, product.isLoadedCategory]",[1411,1423],"[dispatch, searchName]",[1271,1283],"[categoryId, dispatch]"]